<ProxyEndpoint name="default">
  <Flows>
    <Flow name="ReturnQuotaData">
      <Description/>
      <Request>
        <Step>
          <Name>OAuthV2.VerifyAccessToken</Name>
        </Step>
        <Step>
          <Name>FlowCallout.ApplyRateLimiting</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AssignMessage.Status200</Name>
        </Step>
        <Step>
          <Name>AssignMessage.QuotaData</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_quota") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name="ReturnQuotaData2">
      <Description/>
      <Request>
        <Step>
          <Name>VerifyApiKeyQueryParam</Name>
        </Step>
        <Step>
          <Name>FlowCallout.ApplyRateLimitingApiKey</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AssignMessage.Status200</Name>
        </Step>
        <Step>
          <Name>AssignMessage.QuotaData</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_quota2") and (request.verb = "GET")</Condition>
    </Flow>
    <Flow name="OptionsPreFlight">
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddCors</Name>
        </Step>
      </Response>
      <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
    </Flow>
    <Flow name="AddPayloadToPing">
      <Description/>
      <Request/>
      <Response>
        <Step>
          <Name>AssignMessage.AddPayloadToPing</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="StatusEndpoint">
      <Description/>
      <Request>
        <Step>
          <Name>KeyValueMapOperations.GetSharedSecureVariables</Name>
        </Step>
        <Step>
          <Condition>private.apigee.status-endpoint-api-key NotEquals request.header.apikey</Condition>
          <Name>RaiseFault.401Unauthorized</Name>
        </Step>
      </Request>
      <Response/>
      <Condition>(proxy.pathsuffix MatchesPath "/_status") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="ProxygenExternalTargetApikeyTestEndpoint">
      <!-- This endpoint is used by proxygen to test external backends protected
      by API keys. For reference check:
      https://github.com/NHSDigital/api-management-infrastructure/blob/0c2f134897c7c7d42dbb42f42321c2f33e7b1ff7/docker/proxygen/proxygen/tests/integration/data/external-target-apikey.jinja.yaml#L17-->
      <Description/>
      <Request>
        <Step>
          <Name>KeyValueMapOperations.GetSharedSecureVariables</Name>
        </Step>
        <Step>
          <Condition>private.apigee.status-endpoint-api-key NotEquals request.header.apikey</Condition>
          <Name>RaiseFault.401Unauthorized</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AssignMessage.Status200</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/proxygen-external-target-apikey-test-endpoint") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="Flow.OAuthV2Canary">
      <Description/>
      <Request>
        <Step>
          <Name>OAuthV2.VerifyAccessToken</Name>
        </Step>
      </Request>
      <Response/>
      <Condition>(not (proxy.pathsuffix MatchesPath "/_status")) </Condition>
    </Flow>
  </Flows>
  <FaultRules>
    <FaultRule name="quota_per_app_exceeded">
      <Step>
        <Name>AssignMessage.QuotaData</Name>
      </Step>
      <Condition>(ratelimit.QuotaPerApp.failed = true) or (ratelimit.QuotaPerProxy.failed = true)</Condition>
    </FaultRule>
  </FaultRules>  
  <PreFlow/>
  <HTTPProxyConnection>
    <BasePath>{{ SERVICE_BASE_PATH }}</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <PostClientFlow name="PostClientFlow">
    <Response>
      <Step>
        <Name>FlowCallout.LogToSplunk</Name>
      </Step>
    </Response>
  </PostClientFlow>
  <RouteRule name="NoRoute">
    <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
  </RouteRule>
  <RouteRule name="NoRoutePing">
    <Condition>(proxy.pathsuffix MatchesPath "/_ping") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
  </RouteRule>
  <RouteRule name="NoRouteProxygenExternalTargetApikeyTestEndpoint">
    <Condition>(proxy.pathsuffix MatchesPath "/proxygen-external-target-apikey-test-endpoint") and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
  </RouteRule>
  <RouteRule name="target">
    <TargetEndpoint>target</TargetEndpoint>
  </RouteRule>
  <RouteRule name="NoRouteQuota">
    <Condition>(proxy.pathsuffix MatchesPath "/_quota") and (request.verb = "GET")</Condition>
  </RouteRule>
</ProxyEndpoint>
